apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: update-cjerolim-dev-deployment-on-push
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
spec:
  params:
    - name: APP_NAME
      value: nodeinfo-pac
    - name: GIT_REPO
      value: "{{ repo_url }}"
    - name: GIT_REVISION
      value: "{{ revision }}"
    - name: IMAGE_NAME
      value: 'image-registry.openshift-image-registry.svc:5000/cjerolim-dev/nodeinfo-pac'
    - name: PATH_CONTEXT
      value: .
  pipelineSpec:
    params:
      - name: APP_NAME
        type: string
        default: nodeinfo-pac
      - name: GIT_REPO
        type: string
        default: 'https://github.com/jerolimov/nodeinfo-pac'
      - name: GIT_REVISION
        type: string
        default: ''
      - name: IMAGE_NAME
        type: string
        default: 'image-registry.openshift-image-registry.svc:5000/cjerolimv-dev/nodeinfo-pac'
      - name: PATH_CONTEXT
        type: string
        default: .
    tasks:
      - name: fetch-repository
        params:
          - name: url
            value: $(params.GIT_REPO)
          - name: revision
            value: $(params.GIT_REVISION)
          - name: subdirectory
            value: ''
          - name: deleteExisting
            value: 'true'
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
      - name: build
        params:
          - name: IMAGE
            value: $(params.IMAGE_NAME)
          - name: TLSVERIFY
            value: 'false'
          - name: CONTEXT
            value: $(params.PATH_CONTEXT)
        runAfter:
          - fetch-repository
        taskRef:
          kind: ClusterTask
          name: buildah
        workspaces:
          - name: source
            workspace: workspace
      - name: deploy
        params:
          - name: SCRIPT
            value: oc rollout status deploy/$(params.APP_NAME)
        runAfter:
          - build
        taskRef:
          kind: ClusterTask
          name: openshift-client
    workspaces:
      - name: workspace
  serviceAccountName: pipeline
  timeout: 10m
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        metadata:
          labels:
            tekton.dev/pipelinerun: nodeinfo-pac
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
